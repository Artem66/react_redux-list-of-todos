{"version":3,"sources":["types/Filter.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","actions","todo","type","payload","currentTodoReducer","state","action","setQueryAction","query","setFilterTypeAction","startTodoFilters","status","All","filterReducer","todoFilters","setTodosAction","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","selectedTodo","filterStatus","visibleTodos","useMemo","res","Completed","completed","Active","el","title","toLowerCase","includes","filterTodos","className","map","id","classNames","onClick","TodoFilter","onSubmit","e","preventDefault","handleFormSubmit","onChange","event","selectedFilterStatus","currentTarget","value","handleFilterStatus","placeholder","target","handleOnChange","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","json","TodoModal","useState","user","setUser","useEffect","userId","userData","undefined","href","email","name","App","data","Root","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,sDCoBCC,EANG,SAACC,GAAD,MAAgC,CAC9CC,KAAM,kBACNC,QAASF,IAIED,EARM,iBAAyB,CAAEE,KAAM,uBA6BrCE,EAhBY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCACV,OAAQA,EAAOJ,MACb,IAAK,kBACH,OAAOI,EAAOH,QAEhB,IAAK,qBACH,OAAO,KAET,QACE,OAAOE,I,iBDrCDN,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KEcL,IAAMQ,EAAkB,SAACC,GAAD,MAAoC,CACjEN,KAAM,eACNC,QAASK,IAGEC,EAAuB,SAACP,GAAD,MAAoC,CACtEA,KAAM,cACNC,QAASD,IAOLQ,EAAmB,CACvBF,MAAO,GACPG,OAJoCZ,EAAaa,KA4BpCC,EArBO,WAAqD,IAApDC,EAAmD,uDAArCJ,EAAkBJ,EAAmB,uCACxE,OAAQA,EAAOJ,MACb,IAAK,eACH,OAAO,2BACFY,GADL,IAEEN,MAAOF,EAAOH,UAGlB,IAAK,cACH,OAAO,2BACFW,GADL,IAEEH,OAAQL,EAAOH,UAGnB,QACE,OAAO,eACFW,KC1CEC,EAAiB,SAACC,GAAD,MAAoC,CAChEd,KAAM,YACNC,QAASa,IAeIC,EAVM,WAAyD,IAAxDD,EAAuD,uDAAvC,GAAIV,EAAmC,uCAC3E,MACO,cADCA,EAAOJ,KAEJI,EAAOH,QAGPa,GCZPE,EAAcC,0BAAgB,CAClCC,YAAahB,EACbiB,OAAQR,EACRG,MAAOC,IAIIK,EAAQC,sBACnBL,EACAM,8BACEC,0BAAgBC,O,sCCdPC,GADoCC,IACcC,K,OCKlDC,EAAqB,WAChC,IAAMd,EAAQW,GAAe,SAAAtB,GAAK,OAAIA,EAAMW,SACtCe,EAAWH,cACXI,EAAeL,GAAe,SAAAtB,GAAK,OAAIA,EAAMe,eAM7Ca,EAAeN,GAAe,SAAAtB,GAAK,OAAIA,EAAMgB,OAAOV,UACpDH,EAAQmB,GAAe,SAAAtB,GAAK,OAAIA,EAAMgB,OAAOb,SAqC7C0B,EAAeC,mBAAQ,WAC3B,OApCkB,SAClBd,EAEAb,EAEAQ,GAEA,IAAIoB,EAAM,GAEV,OAAQf,GACN,KAAKtB,EAAaa,IAChBwB,EAAMpB,EACN,MAEF,KAAKjB,EAAasC,UAChBD,EAAMpB,EAAMK,QAAO,SAAApB,GAAI,OAAIA,EAAKqC,aAChC,MAEF,KAAKvC,EAAawC,OAChBH,EAAMpB,EAAMK,QAAO,SAAApB,GAAI,OAAKA,EAAKqC,aACjC,MAEF,QACE,OAAOtB,EASX,OANIR,IACF4B,EAAMA,EAAIf,QAAO,SAAAmB,GACf,OAAOA,EAAGC,MAAMC,cAAcC,SAASnC,EAAMkC,mBAI1CN,EAIAQ,CAAYX,EAAczB,EAAOQ,KACvC,CAACiB,EAAczB,IAElB,OACE,qCACE,mBAAGqC,UAAU,0BAAb,iEAIA,wBAAOA,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAIJ,gCACGX,EAAaY,KAAI,SAAA7C,GAAI,OACpB,qBAAI,UAAQ,OAAZ,UACE,oBAAI4C,UAAU,eAAd,SAA8B5C,EAAK8C,KACnC,oBAAIF,UAAU,eAAd,SACG5C,EAAKqC,WACH,sBAAMO,UAAU,OAAO,UAAQ,gBAA/B,SAA+C,mBAAGA,UAAU,qBAGjE,oBAAIA,UAAU,2BAAd,SACE,mBAEEA,UAAWG,IAAW,GAAI,CACxB,mBAAoB/C,EAAKqC,UACzB,mBAAoBrC,EAAKqC,YAJ7B,SAOGrC,EAAKwC,UAIV,oBAAII,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACV3C,KAAK,SACL+C,QAAS,WA7FvBlB,EAAS/B,EA6FkCC,KAJ/B,SAMG+B,IAAiB/B,EAEd,sBAAM4C,UAAU,OAAhB,SACE,mBAAGA,UAAU,uBAIf,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,uBAlCD5C,EAAK8C,gBC9E5BG,EAAuB,WAClC,IAAMnB,EAAWH,cACXpB,EAAQmB,GAAe,SAAAtB,GAAK,OAAIA,EAAMgB,OAAOb,SAoBnD,OACE,uBACEqC,UAAU,mBACVM,SAAU,SAAAC,GAAC,OAfU,SAACA,GACxBA,EAAEC,iBAceC,CAAiBF,IAFlC,UAIE,mBAAGP,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRU,SAAU,SAACC,GAAD,OA3BO,SAACA,GAC1B,IAAMC,EAAuBD,EAAME,cAAcC,MAEjD5B,EAAStB,EAAoBgD,IAwBAG,CAAmBJ,IAF1C,UAIE,wBAAQG,MAAO5D,EAAaa,IAA5B,iBACA,wBAAQ+C,MAAO5D,EAAawC,OAA5B,oBACA,wBAAQoB,MAAO5D,EAAasC,UAA5B,8BAIN,oBAAGQ,UAAU,qDAAb,UACE,uBACE,UAAQ,cACR3C,KAAK,OACL2C,UAAU,QACVgB,YAAY,YACZN,SAAU,SAACC,GAAD,OA/BK,SAACA,GACtBzB,EAASxB,EAAeiD,EAAMM,OAAOH,QA8BVI,CAAeP,IACpCG,MAAOnD,IAET,sBAAMqC,UAAU,eAAhB,SACE,mBAAGA,UAAU,gCAGZrC,EAAMwD,QACP,sBAAMnB,UAAU,gBAAgBoB,MAAO,CAAEC,cAAe,OAAxD,SACE,wBACE,aAAW,QACX,UAAQ,oBACRhE,KAAK,SACL2C,UAAU,SACVI,QAzCU,WACpBlB,EAASxB,EAAe,iB,OCtBf4D,G,MAAmB,kBAC9B,qBAAKtB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASuB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAvC,GAAG,OAAIA,EAAIyC,UAGd,ICbMC,EAAsB,WACjC,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACMlD,EAAWH,cACXI,EAAeL,GAAe,SAAAtB,GAAK,OAAIA,EAAMe,eAYnD,OAPA8D,qBAAU,WDOW,IAACC,ECNC,OAAjBnD,IDMgBmD,ECLVnD,EAAamD,ODKgBf,EAAG,iBAAiBe,KCJtDR,MAAK,SAAAS,GAAQ,OAAIH,EAAQG,QAE7B,IAGD,sBAAKvC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEG,OAAjBb,QAAkCqD,IAATL,EACtB,cAAC,EAAD,IAEA,sBAAKnC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYb,EAAae,MAIzB,wBACE7C,KAAK,SACL2C,UAAU,SACV,UAAQ,cACRI,QAAS,WA/BrBlB,EAAS/B,WAmCD,sBAAK6C,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGb,EAAaS,QAGhB,oBAAGI,UAAU,QAAQ,UAAQ,aAA7B,UACGb,EAAaM,UACT,wBAAQO,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBACJ,OACD,mBAAGyC,KAAI,iBAAYN,EAAKO,OAAxB,SAAkCP,EAAKQ,oBC7C1CC,EAAgB,WAC3B,IAAM1D,EAAWH,cACXZ,EAAQW,GAAe,SAAAtB,GAAK,OAAIA,EAAMW,SACtCgB,EAAeL,GAAe,SAAAtB,GAAK,OAAIA,EAAMe,eAOnD,OALA8D,qBAAU,WFGkBd,EAAY,UEDnCO,MAAK,SAAAe,GAAI,OAAI3D,EAAShB,EAAe2E,SACvC,IAGD,qCACE,qBAAK7C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACoB,IAAjB7B,EAAMgD,OACH,cAAC,EAAD,IACA,cAAC,EAAD,aAKXhC,GACE,cAAC,EAAD,QClCH2D,EAAO,kBACX,cAAC,IAAD,CAAUrE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNsE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.48c0eda1.chunk.js","sourcesContent":["export enum FilterStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { FilterStatus } from '../types/Filter';\n\ntype SetQueryAction = {\n  type: 'filter/QUERY',\n  payload: string,\n};\n\ntype SetFilterAction = {\n  type: 'filter/TYPE',\n  payload: string,\n};\n\ntype Action = SetQueryAction | SetFilterAction;\n\nexport const setQueryAction = ((query: string): SetQueryAction => ({\n  type: 'filter/QUERY',\n  payload: query,\n}));\n\nexport const setFilterTypeAction = ((type: string): SetFilterAction => ({\n  type: 'filter/TYPE',\n  payload: type,\n}));\n\nexport const actions = { setQueryAction, setFilterTypeAction };\n\nconst startTodoFilterStatus: string = FilterStatus.All;\n\nconst startTodoFilters = {\n  query: '',\n  status: startTodoFilterStatus,\n};\n\nconst filterReducer = (todoFilters = startTodoFilters, action: Action) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return {\n        ...todoFilters,\n        query: action.payload,\n      };\n\n    case 'filter/TYPE':\n      return {\n        ...todoFilters,\n        status: action.payload,\n      };\n\n    default:\n      return {\n        ...todoFilters,\n      };\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\nexport const setTodosAction = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodosAction };\n\nconst todosReducer = (todos: Todo[] = [], action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { actions } from '../../features/currentTodo';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { FilterStatus } from '../../types/Filter';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const dispatch = useDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const handleOnClick = (clickedTodo: Todo) => {\n    dispatch(actions.setTodo(clickedTodo));\n  };\n\n  const filterStatus = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n\n  const filterTodos = (\n    filter: string,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    query: string,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    todos: Todo[],\n  ) => {\n    let res = [];\n\n    switch (filter) {\n      case FilterStatus.All:\n        res = todos;\n        break;\n\n      case FilterStatus.Completed:\n        res = todos.filter(todo => todo.completed);\n        break;\n\n      case FilterStatus.Active:\n        res = todos.filter(todo => !todo.completed);\n        break;\n\n      default:\n        return todos;\n    }\n\n    if (query) {\n      res = res.filter(el => {\n        return el.title.toLowerCase().includes(query.toLowerCase());\n      });\n    }\n\n    return res;\n  };\n\n  const visibleTodos = useMemo(() => {\n    return filterTodos(filterStatus, query, todos);\n  }, [filterStatus, query]);\n\n  return (\n    <>\n      <p className=\"notification is-warning\">\n        There are no todos matching current filter criteria\n      </p>\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map(todo => (\n            <tr data-cy=\"todo\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                && <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  // className=\"has-text-danger\"\n                  className={classNames('', {\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleOnClick(todo)}\n                >\n                  {selectedTodo === todo\n                    ? (\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye-slash\" />\n                      </span>\n                    )\n                    : (\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye\" />\n                      </span>\n                    )}\n\n                </button>\n              </td>\n            </tr>\n          ))}\n\n          {/* <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">2</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"has-background-info-light\">\n            <td className=\"is-vcentered\">3</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">fugiat veniam minus</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">4</td>\n            <td className=\"is-vcentered\"><span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span></td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">et porro tempora</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">5</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">laboriosam mollitia et enim quasi adipisci quia provident illum</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">6</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">qui ullam ratione quibusdam voluptatem quia omnis</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">7</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">illo expedita consequatur quia in</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">8</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">9</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">molestiae perspiciatis ipsa</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">10</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">illo est ratione doloremque quia maiores aut</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr> */}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { setFilterTypeAction, setQueryAction } from '../../features/filter';\nimport { FilterStatus } from '../../types/Filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const query = useAppSelector(state => state.filter.query);\n\n  const handleFilterStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedFilterStatus = event.currentTarget.value;\n\n    dispatch(setFilterTypeAction(selectedFilterStatus));\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  };\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setQueryAction(event.target.value));\n  };\n\n  const handleOnClear = () => {\n    dispatch(setQueryAction(''));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={e => handleFormSubmit(e)}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleFilterStatus(event)}\n          >\n            <option value={FilterStatus.All}>All</option>\n            <option value={FilterStatus.Active}>Active</option>\n            <option value={FilterStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => handleOnChange(event)}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              aria-label=\"clear\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleOnClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../../features/currentTodo';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User>();\n  const dispatch = useDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const handleOnClick = () => {\n    dispatch(actions.removeTodo());\n  };\n\n  useEffect(() => {\n    if (selectedTodo !== null) {\n      getUser(selectedTodo.userId)\n        .then(userData => setUser(userData));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {selectedTodo === null || user === undefined\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => handleOnClick()}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n                {' by '}\n                <a href={`mailto:${user.email}`}>{user.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { setTodosAction } from './features/todos';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getTodos()\n      .then(data => dispatch(setTodosAction(data)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo\n      && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}